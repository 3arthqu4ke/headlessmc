name: Test servers
on:
  workflow_dispatch:
  workflow_call:
  push:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name != github.event.pull_request.base.repo.full_name
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: temurin
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build
        run: ./gradlew build

      - name: Delete dev jar
        run: rm headlessmc-launcher-wrapper/build/libs/headlessmc-launcher-*-dev.jar
      - name: Delete javadoc jar
        run: rm headlessmc-launcher-wrapper/build/libs/headlessmc-launcher-*-javadoc.jar
      - name: Delete sources jar
        run: rm headlessmc-launcher-wrapper/build/libs/headlessmc-launcher-*-sources.jar

      - name: Rename launcher jar
        run: mv headlessmc-launcher-wrapper/build/libs/headlessmc-launcher-*.jar headlessmc-launcher-wrapper/build/libs/headlessmc-launcher.jar
      - name: Copy launcher jar
        run: cp headlessmc-launcher-wrapper/build/libs/headlessmc-launcher.jar .

      - name: Upload Launcher Jar
        uses: actions/upload-artifact@v4
        with:
          name: launcher-jar
          path: ./headlessmc-launcher.jar

  run:
    strategy:
      matrix:
        version:
          - { mc: 1.21.5, type: vanilla, java: 21 }
          - { mc: 1.21.5, type: paper, java: 21 }
          - { mc: 1.21.5, type: forge, java: 21 }
          - { mc: 1.21.4, type: neoforge, java: 21 }
          - { mc: 1.21.4, type: fabric, java: 21 }
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name != github.event.pull_request.base.repo.full_name
    needs: build
    steps:
      - name: Install Java
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.version.java }}
          distribution: "temurin"
      - uses: actions/download-artifact@v4
      - name: Display structure of downloaded files
        run: ls -R
      - name: Copy launcher jar
        # rename because mc-runtime-test matches a jar with headlessmc-launcher-<version>.jar
        run: cp launcher-jar/headlessmc-launcher.jar headlessmc-launcher-0.0.0.jar
      - name: Bootstrap HeadlessMC
        run: |
          mkdir -p HeadlessMC run/mods
          cat <<EOF >> HeadlessMC/config.properties
          hmc.java.versions=$JAVA_HOME/bin/java
          hmc.gamedir=$PWD/run
          hmc.offline=true
          hmc.rethrow.launch.exceptions=true
          hmc.exit.on.failed.command=true
          hmc.server.launch.for.eula=true
          hmc.server.accept.eula=true
          hmc.server.test=true
          EOF
        shell: bash
      - name: Download server
        run: java -jar headlessmc-launcher-0.0.0.jar --command server add ${{ matrix.version.type }} ${{ matrix.version.mc }}
        shell: bash
      - name: List servers
        run: java -jar headlessmc-launcher-0.0.0.jar --command server list
        shell: bash
      - name: Launch server
        run: java -jar headlessmc-launcher-0.0.0.jar --command server launch 0 -id
        shell: bash
